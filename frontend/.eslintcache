[{"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/index.js":"1","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/reportWebVitals.js":"2","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/App.js":"3","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/index.js":"4","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Header.js":"5","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Footer.js":"6","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/HomeScreen.js":"7","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/reducers/productReducers.js":"8","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/ProductScreen.js":"9","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/CartScreen.js":"10","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/reducers/cartReducers.js":"11","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Message.js":"12","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Loader.js":"13","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Product.js":"14","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Rating.js":"15","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/actions/productActions.js":"16","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/constants/productConstants.js":"17","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/actions/cartActions.js":"18","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/constants/cartConstants.js":"19","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/reducers/userReducers.js":"20","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/constants/userConstants.js":"21","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/LoginScreen.js":"22","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/FormContainer.js":"23","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/actions/userActions.js":"24","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/RegisterScreen.js":"25","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/ProfileScreen.js":"26","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/ShippingScreen.js":"27","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/CheckoutSteps.js":"28","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/PaymentScreen.js":"29"},{"size":596,"mtime":1607068176916,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1606903602867,"results":"32","hashOfConfig":"31"},{"size":1344,"mtime":1608028056727,"results":"33","hashOfConfig":"31"},{"size":1645,"mtime":1608029908529,"results":"34","hashOfConfig":"31"},{"size":2033,"mtime":1607439590844,"results":"35","hashOfConfig":"31"},{"size":381,"mtime":1606903602867,"results":"36","hashOfConfig":"31"},{"size":1187,"mtime":1607091560123,"results":"37","hashOfConfig":"31"},{"size":1110,"mtime":1607090835291,"results":"38","hashOfConfig":"31"},{"size":5229,"mtime":1607415339020,"results":"39","hashOfConfig":"31"},{"size":4067,"mtime":1607415339020,"results":"40","hashOfConfig":"31"},{"size":1351,"mtime":1608029771343,"results":"41","hashOfConfig":"31"},{"size":255,"mtime":1607078307463,"results":"42","hashOfConfig":"31"},{"size":446,"mtime":1607077769760,"results":"43","hashOfConfig":"31"},{"size":1005,"mtime":1606903602867,"results":"44","hashOfConfig":"31"},{"size":2047,"mtime":1606903602867,"results":"45","hashOfConfig":"31"},{"size":1298,"mtime":1607091214433,"results":"46","hashOfConfig":"31"},{"size":360,"mtime":1607090400895,"results":"47","hashOfConfig":"31"},{"size":1309,"mtime":1608029737396,"results":"48","hashOfConfig":"31"},{"size":230,"mtime":1608029681797,"results":"49","hashOfConfig":"31"},{"size":2200,"mtime":1607954640208,"results":"50","hashOfConfig":"31"},{"size":832,"mtime":1607941555710,"results":"51","hashOfConfig":"31"},{"size":2437,"mtime":1607598267060,"results":"52","hashOfConfig":"31"},{"size":381,"mtime":1607425030662,"results":"53","hashOfConfig":"31"},{"size":4093,"mtime":1607954486143,"results":"54","hashOfConfig":"31"},{"size":3611,"mtime":1607598320283,"results":"55","hashOfConfig":"31"},{"size":4271,"mtime":1607955160835,"results":"56","hashOfConfig":"31"},{"size":2843,"mtime":1608026297659,"results":"57","hashOfConfig":"31"},{"size":1523,"mtime":1608027210106,"results":"58","hashOfConfig":"31"},{"size":1748,"mtime":1608029935156,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"17jumno",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/index.js",[],["122","123"],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/reportWebVitals.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/App.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/index.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Header.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Footer.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/HomeScreen.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/reducers/productReducers.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/ProductScreen.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/CartScreen.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/reducers/cartReducers.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Message.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Loader.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Product.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/Rating.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/actions/productActions.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/constants/productConstants.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/actions/cartActions.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/constants/cartConstants.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/reducers/userReducers.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/constants/userConstants.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/LoginScreen.js",["124"],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../store/actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const redirect = location.search ? location.search.split('=')[1] : ''\n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n\n    const { loading, error, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo])\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email' \n                        placeholder='Enter email' \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Enter password' \n                        value={password} \n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '}\n                    <Link to={redirect !== '' ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/FormContainer.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/store/actions/userActions.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/RegisterScreen.js",["125"],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../store/actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const redirect = location.search ? location.search.split('=')[1] : ''\n\n    const dispatch = useDispatch()\n    const userRegister = useSelector(state => state.userRegister)\n\n    const { loading, error, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo])\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control \n                        type='text'\n                        placeholder='Enter name' \n                        value={name} \n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email' \n                        placeholder='Enter email' \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Enter password' \n                        value={password} \n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Confirm password' \n                        value={confirmPassword} \n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an account?{' '}\n                    <Link to={redirect !== '' ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/ProfileScreen.js",["126"],"import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { USER_UPDATE_PROFILE_RESET } from '../store/constants/userConstants'\nimport { getUserDetails, updateUserProfile } from '../store/actions/userActions'\n\nconst ProfileScreen = ({ location, history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success) {\n                dispatch(getUserDetails('profile'))\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: userInfo._id, name, email, password }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Profile updated!</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control \n                            type='text'\n                            placeholder='Enter name' \n                            value={name || ''} \n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address:</Form.Label>\n                        <Form.Control \n                            type='email' \n                            placeholder='Enter email' \n                            value={email || ''} \n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type='password' \n                            placeholder='Enter password' \n                            value={password} \n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control \n                            type='password' \n                            placeholder='Confirm password' \n                            value={confirmPassword} \n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/ShippingScreen.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/components/CheckoutSteps.js",[],"/home/danijel_nikolic/ReactApps/pro-shop/frontend/src/screens/PaymentScreen.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":26,"column":8,"nodeType":"133","endLine":26,"endColumn":27,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"132","line":29,"column":8,"nodeType":"133","endLine":29,"endColumn":27,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["142"],["143"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},"Update the dependencies array to be: [history, redirect, userInfo]",{"range":"147","text":"148"},{"range":"149","text":"148"},[856,875],"[history, redirect, userInfo]",[1024,1043]]